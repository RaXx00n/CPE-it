input {
  tcp {
    port => 5000
    codec => json
  }
}

filter {
  mutate {
    rename => {
      "DisplayName" => "display_name"
      "DisplayVersion" => "display_version"
      "Publisher" => "publisher"
      "InstallDate" => "install_date"
      "InstallLocation" => "install_location"
      "UninstallString" => "uninstall_string"
      "Name" => "name"
      "Version" => "version"
      "ProviderName" => "provider_name"
    }
  }

  date {
    match => [ "install_date", "yyyyMMdd" ]
    target => "install_date"
  }

  if [install_date] {
    ruby {
      code => "event.set('install_date', Time.at(event.get('install_date').to_i).utc)"
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://127.0.0.1:9200"]
    index => "software_inventory"
    user => "elastic"
    password => ""
    ssl_certificate_verification => false
    }
}
input {
  file {
    path => "/home/kali/Desktop/testdata.ndjson"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
}

filter {
  mutate {
    rename => {
      "DisplayName" => "display_name"
      "DisplayVersion" => "display_version"
      "Publisher" => "publisher"
      "InstallDate" => "install_date"
      "InstallLocation" => "install_location"
      "UninstallString" => "uninstall_string"
      "Name" => "name"
      "Version" => "version"
      "ProviderName" => "provider_name"
    }
  }

  date {
    match => [ "install_date", "yyyyMMdd" ]
    target => "install_date"
  }

  if [install_date] {
    ruby {
      code => "event.set('install_date', Time.at(event.get('install_date').to_i).utc)"
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://127.0.0.1:9200"]
    index => "software_inventory"
    user => "elastic"
    password => ""
    ssl_certificate_verification => false
    }
}

input {
  file {
    path => "/home/kali/Desktop/official_cpe_dictionary_v2.3.xml"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  xml {
    source => "message"
    target => "parsed"
    store_xml => false
    xpath => [
      "//cpe-item", "cpe-item",
      "//entry", "entry"
    ]
  }
}

output {
  elasticsearch {
    hosts => ["https://127.0.0.1:9200"]
    index => "nist_cpe"
    user => "elastic"
    password => ""
    ssl_certificate_verification => false
    }
}
